<templateSet group="React">
  <template name="ir" value="import React, { Component, PropTypes } from 'react';&#10;" description="Import React, Components, PropTypes" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JSX_HTML" value="true" />
    </context>
  </template>
  <template name="pt" value="const propTypes = {&#10;  $prop$: $type$,&#10;};" description="PropTypes" toReformat="false" toShortenFQNames="true">
    <variable name="prop" expression="camelCase(String)" defaultValue="" alwaysStopAt="true" />
    <variable name="type" expression="capitalize(String)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
    </context>
  </template>
  <template name="rc" value="import React, { PropTypes } from 'react';&#10;&#10;const propTypes = {&#10;};&#10;&#10;const defaultProps = {&#10;};&#10;&#10;const $classname$ = () =&gt; (&#10;$END$&#10;);&#10;&#10;$classname$.defaultProps = defaultProps;&#10;$classname$.propTypes = propTypes;&#10;&#10;export default $classname$;" description="React Stateless Component" toReformat="false" toShortenFQNames="true">
    <variable name="classname" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
    </context>
  </template>
  <template name="dt" value="const defaultTypes = {&#10;  $prop$: $type$,&#10;};" description="Default Types" toReformat="false" toShortenFQNames="true">
    <variable name="prop" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="type" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
    </context>
  </template>
</templateSet>